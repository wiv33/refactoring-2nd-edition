const SendModule = require("./sendBulk");
const common = require("../default.test");
const assert = common.assert;
const mocha = common.mocha;
const describe = common.describe;
const it = common.it;

describe(`벌크 전송 테스트`, () => {

    it(`4월 30일 ~ 5월 03일`, function () {
        let cnt = 20;

        const arr = Array.of(704656, 704654, 704652, 704650, 704637, 704621, 704619, 704614, 704611, 704608, 704607, 704598, 704563, 704551, 704546, 702819, 702601, 702590, 702562, 701468);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        // sendWrap(done, cnt, arr)
    })

    it(`04일 `, function () {
        this.timeout(6000);

        let cnt = 48;
        const arr = Array.of(705426, 705421, 705418, 705417, 705411, 705409, 705404, 705395, 705392, 705390, 705385, 705384, 705368, 705354, 705341, 705340, 705304, 705303, 705299, 705292, 705255, 705225, 705094, 704999, 704661, 704659, 704658, 704655, 704653, 704647, 704646, 704638, 704636, 704633, 704617, 704556, 704554, 704547, 704528, 702615, 702606, 702577, 702563, 702556, 702527, 702502, 702496, 702495);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        // sendWrap(done, cnt, arr)
    })

    it(`05일 `, function(done) {
        this.timeout(6000);
        let cnt = 39;
        const arr = Array.of(706282, 706278, 706277, 706272, 706270, 706269, 706261, 706237, 706236, 706228, 706217, 706201, 706126, 706120, 706114, 706105, 706104, 706101, 706070, 706058, 706054, 706048, 706042, 706002, 705998, 705977, 705964, 705947, 705869, 705843, 705760, 705406, 705360, 705174, 705166, 704523, 701519, 701314, 701241,);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        sendWrap(done, cnt, arr);
    });
    it(`06일 `, function(done) {
        this.timeout(6000);
        let cnt = 44;
        const arr = Array.of(707499, 707483, 707480, 707472, 707429, 707427, 707410, 707409, 707405, 707401, 707400, 707394, 707350, 707336, 707332, 707318, 707256, 707246, 707240, 707214, 707188, 707184, 707179, 707139, 707074, 707058, 707042, 707032, 707000, 706984, 706965, 706946, 706891, 706880, 706879, 706824, 706771, 706275, 706245, 706111, 705248, 705186, 705126, 701483,);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        sendWrap(done, cnt, arr);
    });
    it(`07일 `, function(done) {
        this.timeout(6000);
        let cnt = 66;
        const arr = Array.of(708723, 708698, 708692, 708691, 708686, 708678, 708673, 708671, 708669, 708659, 708651, 708650, 708646, 708633, 708631, 708630, 708555, 708533, 708519, 708505, 708503, 708470, 708458, 708430, 708419, 708401, 708388, 708375, 708335, 708328, 708314, 708277, 708235, 708208, 708207, 708206, 708193, 708125, 708121, 708114, 708108, 708099, 708095, 708092, 708087, 708072, 707972, 707832, 707808, 707508, 707422, 707383, 707281, 707251, 707123, 707093, 706972, 706754, 706005, 705361, 705357, 705349, 705348, 705347, 704562, 702558,);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        sendWrap(done, cnt, arr);
    });
    it(`08일 `, function(done) {
        this.timeout(6000);
        let cnt = 11;
        const arr = Array.of(709532, 709380, 709356, 709354, 709330, 709286, 709275, 709260, 709236, 709235, 707312,);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        sendWrap(done, cnt, arr);
    });
    it(`10일 `, function(done) {
        this.timeout(6000);
        let cnt = 27;
        const arr = Array.of(710519, 710518, 710516, 710514, 710511, 710509, 710507, 710504, 710503, 710461, 710460, 710374, 710319, 710297, 710246, 710242, 710239, 710216, 710209, 710202, 709571, 709513, 709339, 709259, 709175, 709071, 707334,);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        sendWrap(done, cnt, arr);
    });
    it(`11일 `, function(done) {
        this.timeout(6000);
        let cnt = 58;
        const arr = Array.of(711616, 711613, 711612, 711604, 711603, 711599, 711596, 711594, 711592, 711589, 711588, 711584, 711565, 711561, 711560, 711559, 711558, 711540, 711533, 711524, 711523, 711511, 711465, 711409, 711406, 711374, 711341, 711331, 711311, 711284, 711279, 711266, 711259, 711246, 711242, 711234, 711231, 711222, 711202, 711193, 711171, 711169, 711167, 711164, 711161, 711104, 711004, 711001, 710517, 710512, 710469, 710334, 710185, 710121, 709536, 709496, 708829, 708486,);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        sendWrap(done, cnt, arr);
    });
    it(`12일 `, function(done) {
        this.timeout(6000);
        let cnt = 54;
        const arr = Array.of(712917, 712912, 712905, 712903, 712897, 712886, 712883, 712871, 712864, 712850, 712844, 712839, 712836, 712826, 712795, 712791, 712774, 712770, 712742, 712741, 712732, 712719, 712703, 712701, 712693, 712679, 712644, 712643, 712642, 712620, 712609, 712585, 712583, 712581, 712559, 712529, 712524, 712498, 712494, 712483, 712468, 712406, 712380, 712297, 712278, 712259, 712215, 712193, 711738, 711575, 711421, 711218, 711032, 708373,);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        sendWrap(done, cnt, arr);
    });
    it(`13일 `, function(done) {
        this.timeout(6000);
        let cnt = 41;
        const arr = Array.of(714366, 714334, 714317, 714313, 714265, 714195, 714151, 714145, 714140, 714116, 714107, 714105, 714101, 714063, 714057, 714021, 714019, 714017, 713998, 713936, 713923, 713904, 713867, 713847, 713836, 713830, 713827, 713826, 713757, 713708, 713686, 713666, 713663, 713596, 713539, 713511, 712749, 712658, 712516, 712434, 708271,);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        sendWrap(done, cnt, arr);
    });
    it(`14일 `, function(done) {
        this.timeout(6000);
        let cnt = 53;
        const arr = Array.of(715564, 715563, 715561, 715559, 715530, 715526, 715524, 715517, 715508, 715502, 715478, 715476, 715475, 715471, 715468, 715446, 715437, 715427, 715398, 715386, 715378, 715352, 715344, 715339, 715330, 715317, 715315, 715311, 715309, 715265, 715248, 715234, 715225, 715215, 715194, 715181, 715157, 715144, 715133, 715069, 715021, 715011, 714994, 714956, 714901, 714739, 714678, 714671, 714375, 714358, 714191, 714117, 714102,);
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        sendWrap(done, cnt, arr);
    });

    it('should be send by pilseong', function (done) {
        this.timeout(6000);
        let cnt = 81;
        const arr = Array.of(736614, 736613, 736612, 736586, 736582, 736543, 736508, 736495, 736474, 736366, 736361, 736354, 735209, 735131, 735093, 735066, 735063, 735061, 735051, 735014, 735009, 735003, 734975, 734486, 734483, 734481, 734479, 734478, 734476, 734474, 734473, 734470, 734462, 734452, 734444, 734427, 734415, 734386, 734375, 734361, 734360, 734349, 734342, 734331, 734325, 734245, 734235, 734207, 734193, 734191, 734188, 734184, 734171, 734168, 734167, 734151, 734140, 734135, 734134, 734129, 734115, 734112, 734107, 734091, 734044, 734020, 733997, 733987, 733787, 733354, 733351, 733347, 733345, 733342, 733341, 733269, 733247, 733241, 733237, 733056, 732852)
        assert.strictEqual(arr.length, cnt, 'is not equal size');
        sendWrap(done, cnt, arr);
    });
})

function sendWrap(done, cnt, arr) {
    let totCnt = cnt;
    arr.forEach(v => {
        totCnt--;
        SendModule.send(v);
    });
    setTimeout(() => {
        assert.strictEqual(totCnt, 0, "is not zero.");
        done();
    }, 4000)
}